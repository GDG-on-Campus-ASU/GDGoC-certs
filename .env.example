# Database Configuration
DB_NAME=gdgoc_certs
DB_USER=postgres
DB_PASSWORD=your_secure_database_password_here

# Authentik OIDC Configuration
AUTHENTIK_ISSUER=https://auth.your-domain.com/application/o/gdgoc-certs/
AUTHENTIK_JWKS_URI=https://auth.your-domain.com/application/o/gdgoc-certs/jwks/
AUTHENTIK_CLIENT_ID=your-authentik-client-id
AUTHENTIK_CLIENT_SECRET=your-authentik-client-secret

# Require GDGoC-Admins group membership (set to 'false' to allow all authenticated users)
# Default: true (requires group membership)
REQUIRE_ADMIN_GROUP=true

# Frontend Authentik Configuration (used during build)
VITE_AUTHENTIK_URL=https://auth.your-domain.com
VITE_AUTHENTIK_CLIENT_ID=your-authentik-client-id
# Response type for OIDC flow (space-separated value):
#   - 'id_token token' for implicit flow (returns tokens directly, recommended)
#   - 'code' for authorization code flow (exchanges code for token via backend)
# Use 'id_token token' if you get "Token exchange not implemented" error
# Default: 'id_token token' (implicit flow)
VITE_AUTHENTIK_RESPONSE_TYPE=id_token token

# API URL for frontend (used during build)
VITE_API_URL=https://api.certs.gdg-oncampus.dev

# Frontend URL (used by backend for token exchange redirect_uri)
FRONTEND_URL=https://sudo.certs-admin.certs.gdg-oncampus.dev

# CORS Configuration (comma-separated list of allowed origins)
ALLOWED_ORIGINS=https://sudo.certs-admin.certs.gdg-oncampus.dev,https://certs.gdg-oncampus.dev

# Brevo (Sendinblue) SMTP Configuration
SMTP_HOST=smtp-relay.brevo.com
SMTP_PORT=587
SMTP_USER=your_brevo_email@example.com
SMTP_PASSWORD=your_brevo_api_key_here
SMTP_FROM_EMAIL=noreply@gdg-oncampus.dev
SMTP_FROM_NAME=GDGoC Certificate System
